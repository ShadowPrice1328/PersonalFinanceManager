@model HomeViewModel

@{
    ViewData["Title"] = "Home Page";
}

<div class="container text-center">
    @if (Model.ConnectionStatus == "Connection error!")
    {
        <p><span class="@Model.ConnectionStatusColor"> @Model.ErrorMessage</span></p>
    }

    @if (!User.Identity.IsAuthenticated)
    {
        <div>
            <h1>Welcome back, @User.Identity.Name!</h1>
            <div class="dashboard">
                <div class="card" onclick="redirect(this.id)" id="categories">
                    <h2>Categories (@Model.Categories.Count)</h2>
                    <ul>
                        @foreach (var categoryName in Model.Categories.Select(x => x.Name).ToList().Take(5))
                        {
                            <li> <p> @categoryName </p>  </li>
                        }
                        <li>. . .</li>
                    </ul>

                </div>
                <div class="card" onclick="redirect(this.id)" id="transactions">
                    <h2>Recent Transactions</h2>
                    <ul>
                        @foreach (var transaction in Model.Transactions.Take(5))
                        {
                            <li>
                                <p>
                                    @transaction.Category -
                                    @transaction.Cost -
                                    @(transaction.Description.Length > 15 
                                    ? transaction.Description.Substring(0, 15) 
                                    : transaction.Description)
                                </p>
                            </li>
                        }
                        <li>. . .</li>
                    </ul>
                </div>
            </div>
        </div>
    }
    else
    {
        <div style="padding-right: 10rem;">
            <h1>Welcome to PFM</h1>
            <h3>Manage your personal finances <span class="cool-text">effortlessly</span>.</h3>
        </div>
        <div class="form-box" id="loginForm">
            <h1>Sign In <i class="fa-solid fa-right-to-bracket" style="padding-right: 10px"></i></h1>
                <div class="form-group">
                    <label for="email">Email address</label>
                    <input type="text" id="email" name="email" placeholder="Enter your email" class="form-control" required />
                </div>
                <div class="form-group">
                     <div class="row-between">
                        <label for="password">Password</label>
                    <i class="fa-solid fa-eye" id="pass-eye" style="cursor:pointer;padding-right:2px;" onclick="showpassword()"></i>
                    </div>
                    <input type="password" id="password" name="password" placeholder="Enter your password" class="form-control" required />
                </div>
                <button onclick="login()" class="btn btn-custom">Login</button> @* implement! *@
        </div>
    }

</div>

<script src="~/js/form.js"></script>

<script>
    function redirect(choice) {
        window.location.href = `/${choice}`;
    }

    function toggleLoginForm() {
        const loginForm = document.getElementById('loginForm');
        loginForm.classList.toggle('slide');
    }

    window.onload = function () {
        const isAuthenticated = @Html.Raw(User.Identity.IsAuthenticated.ToString().ToLower());
        if (!isAuthenticated) {
            document.getElementById('loginForm').classList.add('slide');
        }
    };
</script>